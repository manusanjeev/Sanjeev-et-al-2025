pair_df <- UPF3norm %>%
wilcox_test(baseMeanHCT ~ quartile, p.adjust.method = "bonferroni") %>%
mutate(
y_position = seq(5.2, 5.2 + 0.25*5, by = 0.25),
xmin       = group1,
xmax       = group2,
annotation = sprintf("%.2e", p.adj))          # format as 1.23e‑04
s7<-UPF3norm %>%
ggplot(aes(x = quartile,
y = baseMeanHCT)) +
geom_boxplot(aes(fill = quartile), varwidth = TRUE, outlier.shape = 1,outlier.size = 0.5) +
theme_linedraw()+
geom_signif(
data = pair_df,
mapping = aes(xmin = xmin, xmax = xmax, y_position = y_position, annotations = annotation),
manual = TRUE,
inherit.aes = FALSE,
tip_length = 0.005,
size = 0.3,
textsize = 1.5)+
scale_y_log10(labels = label_number())+
scale_fill_manual(values = colors) +
labs( x = "Quartiles", y= "HCT116  baseMean") +
theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"),
legend.position = "none",aspect.ratio = 2) +
# Add median values below each boxplot
geom_text(data = medians, aes(x = quartile, y = 4,
label = sprintf("%.2f", median_value),
color = quartile),
inherit.aes = FALSE, size = 1.5, vjust = 1) +
scale_color_manual(values = colors)
s7
s7<-UPF3norm %>%
ggplot(aes(x = quartile,
y = baseMeanHCT)) +
geom_boxplot(aes(fill = quartile), varwidth = TRUE, outlier.shape = 1,outlier.size = 0.5) +
theme_linedraw()+
geom_signif(
data = pair_df,
mapping = aes(xmin = xmin, xmax = xmax, y_position = y_position, annotations = annotation),
manual = TRUE,
inherit.aes = FALSE,
tip_length = 0.005,
size = 0.3,
textsize = 1.5)+
scale_y_log10(labels = label_number())+
scale_fill_manual(values = colors) +
labs( x = "Quartiles", y= "HCT116  baseMean") +
theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"),
legend.position = "none",aspect.ratio = 2) +
# Add median values below each boxplot
geom_text(data = medians, aes(x = quartile, y = 4,
label = sprintf("%.2f", median_value),
color = quartile),
inherit.aes = FALSE, size = 1.5, vjust = 1) +
geom_text(data = medians, aes(x = quartile, y = 3,
label = sprintf("%s", count)),
inherit.aes = FALSE, size = 1.5, vjust = 1, color="black")+
scale_color_manual(values = colors)
s7
medians <- UPF3norm %>%
group_by(quartile) %>%
dplyr::summarize(median_value = median(baseMeanHCT, na.rm = TRUE),
count = n())
pair_df <- UPF3norm %>%
wilcox_test(baseMeanHCT ~ quartile, p.adjust.method = "bonferroni") %>%
mutate(
y_position = seq(5.2, 5.2 + 0.25*5, by = 0.25),
xmin       = group1,
xmax       = group2,
annotation = sprintf("%.2e", p.adj))          # format as 1.23e‑04
s7<-UPF3norm %>%
ggplot(aes(x = quartile,
y = baseMeanHCT)) +
geom_boxplot(aes(fill = quartile), varwidth = TRUE, outlier.shape = 1,outlier.size = 0.5) +
theme_linedraw()+
geom_signif(
data = pair_df,
mapping = aes(xmin = xmin, xmax = xmax, y_position = y_position, annotations = annotation),
manual = TRUE,
inherit.aes = FALSE,
tip_length = 0.005,
size = 0.3,
textsize = 1.5)+
scale_y_log10(labels = label_number())+
scale_fill_manual(values = colors) +
labs( x = "Quartiles", y= "HCT116  baseMean") +
theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"),
legend.position = "none",aspect.ratio = 2) +
# Add median values below each boxplot
geom_text(data = medians, aes(x = quartile, y = 4,
label = sprintf("%.2f", median_value),
color = quartile),
inherit.aes = FALSE, size = 1.5, vjust = 1) +
geom_text(data = medians, aes(x = quartile, y = 3,
label = sprintf("%s", count)),
inherit.aes = FALSE, size = 1.5, vjust = 1, color="black")+
scale_color_manual(values = colors)
s7
colors <- c("#CCCCCC", "#B07C7C", "#A05252", "#801818")
E117RvsWT<-read_csv("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYMpaperFiguresUpdate/DESeq2 for PYM samples/all_NT_res.csv")
E117RvsWT<- E117RvsWT%>%dplyr::rename(gene = ...1)%>%na.omit()
E117RvsWT<-inner_join(E117RvsWT, SMGnorm[,2:4])
#as boxplot
medians <- E117RvsWT %>%
group_by(quartile) %>%
dplyr::summarize(median_value = median(log2FoldChange, na.rm = TRUE),
count = n())
pair_df <- E117RvsWT %>%
wilcox_test(log2FoldChange ~ quartile, p.adjust.method = "bonferroni") %>%
mutate(
y_position = seq(3.1, 3.1 + 0.4*5, by = 0.4),
xmin       = group1,
xmax       = group2,
annotation = sprintf("%.2e", p.adj))          # format as 1.23e‑04
s8<-E117RvsWT %>%
ggplot(aes(x = quartile,
y = log2FoldChange)) +
geom_boxplot(aes(fill = quartile), varwidth = TRUE, outlier.shape = 1,outlier.size = 0.5) +
theme_linedraw() +
geom_signif(
data = pair_df,
mapping = aes(xmin = xmin, xmax = xmax, y_position = y_position, annotations = annotation),
manual = TRUE,
inherit.aes = FALSE,
tip_length = 0.005,
size = 0.3,
textsize = 1.5) +
coord_cartesian(ylim = c(-4, 5.3)) +
scale_fill_manual(values = colors) +
labs( x = "Quartiles", y= "log2FC E117R vs WT") +
theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"),
legend.position = "none",aspect.ratio = 2) +
# Add median values below each boxplot
geom_text(data = medians, aes(x = quartile, y = -3.7,
label = sprintf("%.2f", median_value),
color = quartile),
inherit.aes = FALSE, size = 2, vjust = 1) +
geom_text(data = medians, aes(x = quartile, y = -4,
label = sprintf("%s", count)),
inherit.aes = FALSE, size = 1.5, vjust = 1, color="black")+
scale_color_manual(values = colors)
s8
library(patchwork)
layout <- c(
area(1,1,2,2),area(1, 3, 2,4),area(1,5,2,7),
area(3,1,4,2),area(3,3,4,4),
area(3,5,4,6),area(5,4,8,6))
plot(layout)
ggsave("S5patch1.pdf",
s2+s3+s4+s6+s7+s8+
plot_layout(design = layout)+
plot_annotation(title = 'FIGURE S5', tag_levels = "a")  &
theme(plot.tag = element_text(face = 'bold')),
width = 8.5,
height = 11,
units = "in")
rolDESeq<-read_tsv("DESeqResults/PYMkdvsControlDESeq_tpm0.1.tsv")
#PYMkd_ all PTC cdf plot####
#analysis with robert's PTC+ and PTC- list
PTClist <- read.delim("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/CASC3/ENST_PTC-EPI-TFG.txt")
names(PYMkdvsControlDESeq)[7] <- "ENST.ID"
PYMkdvsControlDESeq<-read_tsv("DESeqResults/PYMkdvsControlDESeq_tpm0.1.tsv")
#PYMkd_ all PTC cdf plot####
#analysis with robert's PTC+ and PTC- list
PTClist <- read.delim("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/CASC3/ENST_PTC-EPI-TFG.txt")
names(PYMkdvsControlDESeq)[7] <- "ENST.ID"
PYMkdvsControlDESeq$ENST.ID <- sub("\\..*", "", PYMkdvsControlDESeq$ENST.ID)
length(intersect(PYMkdvsControlDESeq$ENST.ID,PTClist$ENST.ID))
PYMkdvsControlDESeq<-inner_join(PYMkdvsControlDESeq, PTClist, by = "ENST.ID")
library(biomaRt)
listMarts(host='https://apr2020.archive.ensembl.org')
ensembl100=useMart(host='https://apr2020.archive.ensembl.org', biomart='ENSEMBL_MART_ENSEMBL', dataset='hsapiens_gene_ensembl')
attributes <- listAttributes(ensembl100)
filters <- listFilters(ensembl100)
PTCgenes <- getBM(attributes = c("ensembl_gene_id","ensembl_transcript_id",
"transcript_biotype"),
filters = "ensembl_transcript_id",
values = PYMkdvsControlDESeq$ENST.ID,
mart = ensembl100,
useCache = FALSE)
table(PTCgenes$transcript_biotype)
names(PTCgenes)[2]<-"ENST.ID"
PYMkdvsControlDESeq<-inner_join(PYMkdvsControlDESeq, PTCgenes, by = "ENST.ID")
PYMkdvsControlDESeq <- PYMkdvsControlDESeq %>%
dplyr::group_by(ensembl_gene_id) %>%                      # Group by gene ID
filter(any(PTC.Status == TRUE) & any(PTC.Status == FALSE)) %>%  # Keep only genes with both TRUE & FALSE PTC statuses
ungroup()
#Plot:PYMkdvsControl_allPTC####
# calculate pairwise p-values (for example, Wilcoxon test)
p_values <- pairwise.wilcox.test(
PYMkdvsControlDESeq$log2FoldChange,
PYMkdvsControlDESeq$PTC.Status,
p.adjust.method = "bonferroni"
)$p.value
wilcox.test(log2FoldChange ~ PTC.Status, data = PYMkdvsControlDESeq,
exact = FALSE)
# Convert p-values to a readable format for display
# Extract and format p-values correctly based on row and column names
pval_text <- paste("p-values(Wilcoxon test):",
paste(format(p_values, scientific = TRUE, digits = 2)),  # "c vs l"
sep = "\n")
# Calculate the number of genes in each group
group_counts <- PYMkdvsControlDESeq %>%
group_by(PTC.Status) %>%
dplyr::summarize(count = n(), .groups = 'drop')
# Create formatted labels with counts
labels_with_counts <- paste(group_counts$PTC.Status,
" (", group_counts$count, ")", sep = "")
labels_with_counts <-str_replace(labels_with_counts,"TRUE","PTC+")
labels_with_counts <-str_replace(labels_with_counts,"FALSE","PTC-")
# plotting as before
s1<-PYMkdvsControlDESeq %>%
ggplot(aes(log2FoldChange, color = PTC.Status)) +
geom_vline(aes(xintercept = 0), linewidth = 0.02)+
geom_hline(aes(yintercept = 0.5), linewidth = 0.02)+
stat_ecdf(geom = "line", linewidth = 0.8) +
scale_color_manual(values = c("FALSE" = "grey45", "TRUE" = "red3"),
labels = labels_with_counts) +  # Change legend text
coord_cartesian(xlim = c(-2, 2)) +
theme_linedraw() +
theme(axis.title = element_text(size = 5),axis.text = element_text(size = 3),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
legend.position = c(0.98, 0.02),         # Move legend to bottom right
legend.justification = c(1, 0),    # Ensure correct alignment at bottom right
legend.title=element_text(size=7),
legend.text=element_text(size=5),
legend.key.size =unit(2, 'mm')
)+
labs(#title = "PYM1 kd vs Control",
y = "Cumulative frequency", x = "log2FC PYM1kd/Control") +
annotate("text", x = -1.9, y = 0.92, label = pval_text, hjust = 0, size = 2, color = "black")  # Add p-values on top left
s1+ labs(title = "PYM1 kd vs Control")
##Comparing with CASC3 and SMGko
CASC3deseq<-read_tsv("DESeqResults/CASC3KOdeseqresults.tsv")
SMG67deseq<-read_tsv("DESeqResults/SMG67kdvsControlDESeq.tsv")
SMG67deseq <- SMG67deseq[, c(2:7, 1)]
PYMdeseq<-read_tsv("DESeqResults/PYMkdvsControlDESeq_tpm0.1.tsv")
PTClist <- read.delim("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/CASC3/ENST_PTC-EPI-TFG.txt")
names(PYMkdvsControlDESeq)[7] <- "ENST.ID"
PYMkdvsControlDESeq$ENST.ID <- sub("\\..*", "", PYMkdvsControlDESeq$ENST.ID)
length(intersect(PYMkdvsControlDESeq$ENST.ID,PTClist$ENST.ID))
PYMkdvsControlDESeq<-inner_join(PYMkdvsControlDESeq, PTClist, by = "ENST.ID")
Foldchangedf <- data.frame()  # Initialize empty result data frame
for (name in c("PYMdeseq", "CASC3deseq", "SMG67deseq")) {
tmp <- get(name)  # Retrieve the data frame by its name as a string
names(tmp)[7] <- "ENST.ID"
tmp$ENST.ID <- sub("\\..*", "", tmp$ENST.ID)
tmp <- inner_join(tmp, PTClist, by = "ENST.ID")
tmp$comparison <- str_remove(name, "deseq")
Foldchangedf <- rbind(Foldchangedf, tmp)}
table(Foldchangedf$comparison)
#plot:
Foldchangedf<-Foldchangedf%>%
mutate(PTC_status = case_when(PTC.Status == T ~ "PTC+",
PTC.Status == F ~ "PTC-"))
Foldchangedf$comparison<-factor(Foldchangedf$comparison, levels=c("PYM","CASC3","SMG67"))
s2<-Foldchangedf%>%
ggplot(aes(PTC_status, log2FoldChange, fill = PTC_status))+
geom_hline(yintercept = 0,size = 0.05)+
geom_boxplot(outliers = F)+
facet_wrap(~comparison)+
scale_fill_manual(values = c("PTC-" = "grey45", "PTC+" = "red3")) +
theme_linedraw() +
coord_cartesian(ylim = c(-3.2,4.5))+
theme( axis.title = element_text(size = 5),axis.text = element_text(size = 3),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 3.2,
legend.position = "none",
strip.text = element_text(color="black",size =4, angle = 0, hjust =0),
strip.background = element_blank()) +
labs( y = "log2FC",
x = "PTC status" ) +
stat_compare_means(comparisons = list(c("PTC-", "PTC+")),
method = "wilcox.test",
label = "p.format",
label.y = 3.58, size = 1,tip.length = 0.005) # Adjust as needed for positioning
s2
Foldchangedf %>%
count(comparison, PTC_status)
View(Foldchangedf)
Foldchangedf %>%
fplyr::count(comparison, PTC_status)
Foldchangedf %>%
dplyr::count(comparison, PTC_status)
setwd("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYMpaperFigures/Figure5/")
library(tidyverse)
#plotting signalP/transmembrane/mitocarta/pexdb######
PYMkdDESeqlong<-read_csv("wild_vs_kd_CHECKED_res.csv")
names(PYMkdDESeqlong)[1]<-"ensembl_gene_id"
PYMkdDESeqlong<-na.omit(PYMkdDESeqlong)
#Creating a new df
PYMkdDESeqlong<-inner_join(PYMkdDESeq[,1:3],Membrane[,1:3])
setwd("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYMpaperFigures/Figure5/")
library(tidyverse)
#plotting signalP/transmembrane/mitocarta/pexdb######
PYMkdDESeqlong<-read_csv("wild_vs_kd_CHECKED_res.csv")
names(PYMkdDESeqlong)[1]<-"ensembl_gene_id"
PYMkdDESeqlong<-na.omit(PYMkdDESeqlong)
#Creating a new df
PYMkdDESeqlong<-inner_join(PYMkdDESeq[,1:3],Membrane[,1:3])
#plotting signalP/transmembrane/mitocarta/pexdb######
PYMkdDESeqlong<-read_csv("wild_vs_kd_CHECKED_res.csv")
names(PYMkdDESeqlong)[1]<-"ensembl_gene_id"
PYMkdDESeqlong<-na.omit(PYMkdDESeqlong)
#Creating a new df
PYMkdDESeqlong<-inner_join(PYMkdDESeqlong[,1:3],Membrane[,1:3])
#Creating a new df
Membrane<-read_tsv("Membrane.tsv")
setwd("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYMpaperFigures/Figure5/")
setwd("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYMpaperFiguresUpdate/Figure5/")
library(tidyverse)
#plotting signalP/transmembrane/mitocarta/pexdb######
PYMkdDESeqlong<-read_csv("wild_vs_kd_CHECKED_res.csv")
names(PYMkdDESeqlong)[1]<-"ensembl_gene_id"
PYMkdDESeqlong<-na.omit(PYMkdDESeqlong)
#plotting signalP/transmembrane/mitocarta/pexdb######
PYMkdDESeqlong<-read_csv("wild_vs_kd_CHECKED_res.csv")
setwd("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYMpaperFiguresUpdate/Figure6/")
#plotting signalP/transmembrane/mitocarta/pexdb######
PYMkdDESeqlong<-read_csv("wild_vs_kd_CHECKED_res.csv")
names(PYMkdDESeqlong)[1]<-"ensembl_gene_id"
PYMkdDESeqlong<-na.omit(PYMkdDESeqlong)
#Creating a new df
Membrane<-read_tsv("Mem")
#Creating a new df
Membrane<-read_tsv("Membrane.tsv")
Membrane<-Membrane%>%filter(chromosome_name %in% c(1:22, "X","Y","MT"))
table(Membrane$chromosome_name)
PYMkdDESeqlong<-inner_join(PYMkdDESeqlong[,1:3],Membrane[,1:3])
names(PYMkdDESeqlong)
#Creating new columns in YES/No format
PYMkdDESeqlong<-PYMkdDESeqlong%>%mutate(
SignalPeptide = case_when(
tmhmm=="TMhelix"  ~ "Yes",
TRUE ~"No"))
PYMkdDESeqlong<-PYMkdDESeqlong%>%mutate(
TransMembraneDomain = case_when(
signalp %in% c("SignalP-noTM","SignalP-TM") ~ "Yes",
TRUE ~"No"))
PYMkdDESeqlong<-PYMkdDESeqlong[,c(1,3,6,7)]
PYMkdDESeqlong<-PYMkdDESeqlong%>%
mutate(MitocartaAnnotation=
case_when(ensembl_gene_id %in% MitoCarta$ensembl_gene_id~ "Yes",
TRUE ~ "No"))
table(PYMkdDESeqlong$MitocartaAnnotation)
# Read the FASTA file
pexdb_sequences <- readAAStringSet("PexDB_Homo_sapiens.fas")
# Extract headers from the FASTA file
names(pexdb_sequences)
length(pexdb_sequences) # only 100
#Checking ensembl GO annotation
# genes_peroxisome <- getBM(
#   attributes = c("external_gene_name","ensembl_gene_id", "go_id", "name_1006"), # Gene name, GO ID, GO term name,
#   filters = "go",
#   values = "GO:0005777", # GO term for peroxisome
#   mart = ensembl100)
# write_tsv(genes_peroxisome,"genes_peroxisome.tsv")
genes_peroxisome<-read_tsv("genes_peroxisome.tsv")
unique(genes_peroxisome$external_gene_name)#121 gene names
unique(genes_peroxisome$ensembl_gene_id)#129 gene ids
#Reading MitoCarta#####
MitoCarta<- read_excel("Human.MitoCarta3.0.xls",
sheet = "A Human MitoCarta3.0")
names(MitoCarta)
MitoCarta<-MitoCarta[,c(1,3,4,15)]
MitoCarta$ensembl_gene_id<-str_split(MitoCarta$EnsemblGeneID_mapping_version_20200130, "\\|",simplify = T)[,1]
PYMkdDESeqlong<-PYMkdDESeqlong%>%
mutate(MitocartaAnnotation=
case_when(ensembl_gene_id %in% MitoCarta$ensembl_gene_id~ "Yes",
TRUE ~ "No"))
table(PYMkdDESeqlong$MitocartaAnnotation)
PYMkdDESeqlong<-PYMkdDESeqlong%>%
mutate(PeroxisomeAnnotation=
case_when(ensembl_gene_id %in% genes_peroxisome$ensembl_gene_id ~ "Yes",
TRUE ~ "No"))
table(PYMkdDESeqlong$PeroxisomeAnnotation)
PYMkdDESeqlong<-PYMkdDESeqlong%>%
mutate(MembraneTranslation=
case_when(ensembl_gene_id %in% sets_list$Jan.ER ~ "Yes",
TRUE ~ "No"))
sets_list <- readRDS("sets_list.rds")
PYMkdDESeqlong<-PYMkdDESeqlong%>%
mutate(MembraneTranslation=
case_when(ensembl_gene_id %in% sets_list$Jan.ER ~ "Yes",
TRUE ~ "No"))
#Converting to long format
PYMkdDESeqlong <- PYMkdDESeqlong %>%
pivot_longer(cols = !c(ensembl_gene_id, log2FoldChange), # which columns do we want to "pivot"
names_to = "Classification", # where should the column names go
values_to = "Annotation")
PYMkdDESeqlong$Classification <- factor(PYMkdDESeqlong$Classification,
levels = c("MembraneTranslation",
"TransMembraneDomain",
"SignalPeptide",
"MitocartaAnnotation",
"PeroxisomeAnnotation"))
table(PYMkdDESeqlong$Classification)
library(ggpubr)
# Calculate medians for each PTC.Status group
median_values <- PYMkdDESeqlong %>%
group_by(Annotation, Classification) %>%
dplyr::summarize(median_log2FC = median(log2FoldChange), .groups = 'drop')
# Calculate medians for each PTC.Status group
median_values <- PYMkdDESeqlong %>%
group_by(Annotation, Classification) %>%
dplyr::summarize(median_log2FC = median(log2FoldChange),
count = n(), .groups = 'drop')
c<-PYMkdDESeqlong %>%
ggplot(aes(x = Annotation, y = log2FoldChange, fill = Annotation)) +
geom_hline(yintercept = 0, size = 0.05) +
#geom_point(aes(color = Group), position = position_jitterdodge(), alpha = 0.5, size=0.5) +
#geom_boxplot(position = position_dodge(), varwidth = T, alpha = 0.1, outlier.size = 0.8) +
geom_boxplot(position = position_dodge(), varwidth = T,outlier.shape = NA)+
scale_fill_manual(values = c("No" = "grey45", "Yes" = "red3")) +
scale_color_manual(values = c("No" = "grey45", "Yes" = "red3")) +
theme_linedraw() +
coord_cartesian(ylim = c(-1.5,1.5))+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 3,
legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(color= "black",size =6, angle = 0, hjust =0)) +
labs( y = "log2FC PYM1kd/Control",
x = "Annotation" ) +
facet_wrap(~Classification, nrow = 1) +
stat_compare_means(comparisons = list(c("Yes", "No")),
method = "wilcox.test",
label = "p.format",
label.y = 0.8,size = 3,tip.length = 0.003) + # Adjust as needed for positioning
# Add medians below each boxplot
geom_text(data = median_values,
aes(x = Annotation, y = -1.1, label = sprintf("%.2f", median_log2FC), color = Annotation),
size = 3, vjust = 1.5, inherit.aes = FALSE) +
geom_text(data = median_values,
aes(x = Annotation, y = -1.3, label = sprintf("%s", count), color = Annotation),
size = 3, vjust = 1.5, inherit.aes = FALSE) +
c+labs(title = "PYM1kd vs Control foldchanges",
subtitle = "Grouped by different membrane annotations")
c<-PYMkdDESeqlong %>%
ggplot(aes(x = Annotation, y = log2FoldChange, fill = Annotation)) +
geom_hline(yintercept = 0, size = 0.05) +
#geom_point(aes(color = Group), position = position_jitterdodge(), alpha = 0.5, size=0.5) +
#geom_boxplot(position = position_dodge(), varwidth = T, alpha = 0.1, outlier.size = 0.8) +
geom_boxplot(position = position_dodge(), varwidth = T,outlier.shape = NA)+
scale_fill_manual(values = c("No" = "grey45", "Yes" = "red3")) +
scale_color_manual(values = c("No" = "grey45", "Yes" = "red3")) +
theme_linedraw() +
coord_cartesian(ylim = c(-1.5,1.5))+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 3,
legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(color= "black",size =6, angle = 0, hjust =0)) +
labs( y = "log2FC PYM1kd/Control",
x = "Annotation" ) +
facet_wrap(~Classification, nrow = 1) +
stat_compare_means(comparisons = list(c("Yes", "No")),
method = "wilcox.test",
label = "p.format",
label.y = 0.8,size = 3,tip.length = 0.003) + # Adjust as needed for positioning
# Add medians below each boxplot
geom_text(data = median_values,
aes(x = Annotation, y = -1.1, label = sprintf("%.2f", median_log2FC), color = Annotation),
size = 3, vjust = 1.5, inherit.aes = FALSE) +
geom_text(data = median_values,
aes(x = Annotation, y = -1.3, label = sprintf("%s", count)),
size = 3, vjust = 1.5, inherit.aes = FALSE, color = "black") +
c+labs(title = "PYM1kd vs Control foldchanges",
subtitle = "Grouped by different membrane annotations")
View(median_values)
c<-PYMkdDESeqlong %>%
ggplot(aes(x = Annotation, y = log2FoldChange, fill = Annotation)) +
geom_hline(yintercept = 0, size = 0.05) +
#geom_point(aes(color = Group), position = position_jitterdodge(), alpha = 0.5, size=0.5) +
#geom_boxplot(position = position_dodge(), varwidth = T, alpha = 0.1, outlier.size = 0.8) +
geom_boxplot(position = position_dodge(), varwidth = T,outlier.shape = NA)+
scale_fill_manual(values = c("No" = "grey45", "Yes" = "red3")) +
scale_color_manual(values = c("No" = "grey45", "Yes" = "red3")) +
theme_linedraw() +
coord_cartesian(ylim = c(-1.5,1.5))+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 3,
legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(color= "black",size =6, angle = 0, hjust =0)) +
labs( y = "log2FC PYM1kd/Control",
x = "Annotation" ) +
facet_wrap(~Classification, nrow = 1) +
stat_compare_means(comparisons = list(c("Yes", "No")),
method = "wilcox.test",
label = "p.format",
label.y = 0.8,size = 3,tip.length = 0.003) + # Adjust as needed for positioning
# Add medians below each boxplot
geom_text(data = median_values,
aes(x = Annotation, y = -1.1, label = sprintf("%.2f", median_log2FC), color = Annotation),
size = 3, vjust = 1.5, inherit.aes = FALSE) +
geom_text(data = median_values,
aes(x = Annotation, y = -1.3, label = sprintf("%s", count)),
size = 3, vjust = 1.5, inherit.aes = FALSE, color = "black")
c+labs(title = "PYM1kd vs Control foldchanges",
subtitle = "Grouped by different membrane annotations")
