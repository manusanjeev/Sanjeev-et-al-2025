counts1=as.matrix(counts)
View(counts1)
ddscounts.table <- DESeqDataSetFromMatrix(counts1, colData, formula(~ genotype))
counts1 <- mapply(counts1, FUN=as.numeric)
ddscounts.table <- DESeqDataSetFromMatrix(counts1, colData, formula(~ genotype))
View(countsinfo)
counts1=as.matrix(counts)
class(counts1)="numeric"
ddscounts.table <- DESeqDataSetFromMatrix(counts1, colData, formula(~ genotype))
View(ddscounts.table)
ddscounts <- DESeq(ddscounts.table)
#PCAplots
vsd <- vst(ddscounts, blind = FALSE)
rld <- rlog(ddscounts)
plotPCA(vsd, intgroup = "genotype")
dev.off()
plotPCA(vsd, intgroup = "genotype")
View(counts22)
plotPCA(vsd, intgroup = "genotype") +
geom_text(aes(label=name), vjust=2, hjust=-0.025)
plotPCA(vsd, intgroup = "genotype") +
geom_text(aes(label=name), vjust=3, hjust=-0.025)
plotPCA(vsd, intgroup = "genotype") +
geom_text(aes(label=name), vjust=2, hjust=-0.5)
plotPCA(rld, intgroup = "genotype")
View(rld)
View(vsd)
#Results
as.data.frame(colData(ddscounts))
res_counts <- results(ddscounts)
res_counts
View(res_counts)
plotPCA(vsd, intgroup = "genotype") +
geom_text(aes(label=name), vjust=2, hjust=-0.025)
install.packages("ggrepel")
library(ggrepel)
plotPCA(vsd, intgroup = "genotype") geom_label_repel(aes(label=name)))
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel()
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel(label=name),vjust=2, hjust=-0.025
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel((label=name),vjust=2, hjust=-0.025)
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel((label="genotype"),vjust=2, hjust=-0.025)
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel(aes(label="genotype"),vjust=2, hjust=-0.025)
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel(aes(label=name),vjust=2, hjust=-0.025)
head(colData)
colData
head(ddscounts)
#Results
as.data.frame(colData(ddscounts))
View(res_counts)
res_counts
res_counts <- results(ddscounts, contrast = c("RNPS1KD","ControlKD"))
res_counts <- results(ddscounts, contrast = c("genotype","RNPS1KD","ControlKD"))
#res <- results( dds, contrast = c("treatment", "DPN", "Control") )
res_counts
mcols(res_counts, use.names = TRUE)
#Independent Filtering of Results
metadata(res_counts)
metadata(res_counts)$filterThreshold
plot(metadata(res_counts)$filterNumRej,
type="b", ylab="number of rejections",
xlab="quantiles of filter")
lines(metadata(res_counts)$lo.fit, col="red")
abline(v=metadata(res_counts)$filterTheta)
#Histogram of p values
hist(res_counts$pvalue, col = "darkslategray1")
hist(res_counts$padj, col = "red1")
#significant results
res.sig <- res_counts[ which(res_counts$padj < 0.05), ]
hist(res.sig$pvalue, col = "green1")
plotMA(res_counts)
plotMA(res.sig)
plotDispEsts(ddscounts)
sampleDists <- dist(t(assay(vsd)))
install.packages("pheatmap","RColorBrewer")
install.packages("pheatmap")
library(pheatmap)
library(RColorBrewer)
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$genotype, sep = "-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows = sampleDists,
clustering_distance_cols = sampleDists,
col = colors)
plotMA(res_counts)
head(res.sig)
sum( res.sig$log2FoldChange < 0, na.rm=TRUE )
sum( res.sig$log2FoldChange > 0, na.rm=TRUE )#downregulated genes
head(res.sig$log2FoldChange < 0, na.rm=TRUE)
head(res.sig$log2FoldChange < 0)
head(res.sig$log2FoldChange > 0)
head( res.sig[ order( res.sig$log2FoldChange ), ] )
head( res.sig[ order( res.sig$log2FoldChange ), ],100 )
head( res.sig[ order( res.sig$log2FoldChange ), ],20 )
tail( res.sig[ order( res.sig$log2FoldChange ), ],20 )
res_counts2 <- results(ddscounts, contrast = c("genotype","RNPS1rescue","ControlKD"))
res.sig2 <- res_counts2[ which(res_counts2$padj < 0.05), ]
plotMA(res_counts2)
sum( res.sig2$log2FoldChange < 0, na.rm=TRUE )#upregulated genes=2203
sum( res.sig2$log2FoldChange > 0, na.rm=TRUE )#downregulated genes=2208
res_counts3 <- results(ddscounts, contrast = c("genotype","E179Rrescue","ControlKD"))
res.sig3 <- res_counts3[ which(res_counts2$padj < 0.05), ]
plotMA(res_counts3)
sum( res.sig3$log2FoldChange < 0, na.rm=TRUE )#upregulated genes=353
sum( res.sig3$log2FoldChange > 0, na.rm=TRUE )#downregulated genes=189
res.sig3 <- res_counts3[ which(res_counts3$padj < 0.05), ]
plotMA(res_counts3)
sum( res.sig3$log2FoldChange < 0, na.rm=TRUE )#upregulated genes=342
sum( res.sig3$log2FoldChange > 0, na.rm=TRUE )#downregulated genes=200
res_counts4 <- results(ddscounts, contrast = c("genotype","E179Rrescue","RNPS1rescue"))
res.sig4 <- res_counts4[ which(res_counts4$padj < 0.05), ]
plotMA(res_counts4)
sum( res.sig4$log2FoldChange < 0, na.rm=TRUE )#upregulated genes=3052
sum( res.sig4$log2FoldChange > 0, na.rm=TRUE )#downregulated genes=2696
plotPCA(vsd, intgroup = "genotype")
#with sample labels
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel(aes(label=name),vjust=2, hjust=-0.025)
View(counts1)
View(counts1)
View(counts22)
View(counts22)
View(counts22)
#with sample labels
plotPCA(vsd, intgroup = "genotype")+
geom_text_repel(aes(label=name),vjust=2, hjust=-0.025)
pheatmap(sampleDistMatrix,
clustering_distance_rows = sampleDists,
clustering_distance_cols = sampleDists,
col = colors)
abundance <- read.delim("~/Box/Singh lab/Bioinfo/abundance.tsv")
View(abundance)
b=1
h=1
a=0
for (i in 1:20){
a <- a + (b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
}
a
b=1
h=1
a=0
for (i in 1:20){
a <- a + (b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
a
}
a
print a
a <- a + (2^i)*(b*h)
b=1
h=1
a=0
for (i in 0:20){
a <- a + (2^i)*(b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
a
}
a
2*a
for (i in 0:100){
a <- a + (2^i)*(b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
a
}
b=1
h=1
a=0
for (i in 0:100){
a <- a + (2^i)*(b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
a
}
2*a
sprintf("%.100f",pi)
options(digits=20)
2*a
b=1
h=1
a=0
for (i in 0:10){
a <- a + (2^i)*(b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
a
}
2*a
b=1
h=1
a=0
for (i in 0:100){
a <- a + (2^i)*(b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
a
}
2*a
b=1
h=1
a=0
for (i in 0:1000){
a <- a + (2^i)*(b*h)
b <- sqrt(h*h + b*b)
b <- b/2
h <- sqrt(1 - (b*b))
h <- 1-h
a
}
2*a
knitr::opts_chunk$set(echo = TRUE)
library(RUVSeq)
install.packages("RUVSeq")
BiocManager::install("RUVSeq")
BiocManager::install("zebrafishRNASeq")
library(RUVSeq)
BiocManager::install("EDASeq")
install.packages(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
update.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(RUVSeq)
library(zebrafishRNASeq)
data(zfGenes)
head(zfGenes)
tail(zfgenes)
tail(zfGenes)
View(zfGenes)
filter <- apply(zfGenes, 1, function(x) length(x[x>5])>=2)
filtered <- zfGenes[filter,]
genes <- rownames(filtered)[grep("^ENS", rownames(filtered))]
spikes <- rownames(filtered)[grep("^ERCC", rownames(filtered))]
x <- as.factor(rep(c("Ctl", "Trt"), each=3))
set <- newSeqExpressionSet(as.matrix(filtered),
phenoData = data.frame(x, row.names=colnames(filtered)))
set
library(RColorBrewer)
colors <- brewer.pal(3, "Set2")
plotRLE(set, outline=FALSE, ylim=c(-4, 4), col=colors[x])
plotPCA(set, col=colors[x], cex=1.2)
library(RColorBrewer)
colors <- brewer.pal(3, "Set2")
plotRLE(set, outline=FALSE, ylim=c(-4, 4), col=colors[x])
plotPCA(set, col=colors[x], cex=1.2)
set <- betweenLaneNormalization(set, which="upper")
set <- betweenLaneNormalization(set, which="upper")
plotRLE(set, outline=FALSE, ylim=c(-4, 4), col=colors[x])
plotRLE(set, outline=TRUE, ylim=c(-4, 4), col=colors[x])
plotRLE(set, outline=FALSE, ylim=c(-4, 4), col=colors[x])
plotPCA(set, col=colors[x], labels=FALSE)
plotRLE(set, outline=FALSE, ylim=c(-4, 4), col=colors[x])
plotPCA(set, col=colors[x], labels=FALSE)
set1 <- RUVg(set, spikes, k=1)
set1 <- RUVg(set, spikes, k=1)
pData(set1)
plotRLE(set1, outline=FALSE, ylim=c(-4, 4), col=colors[x])
plotPCA(set1, col=colors[x], cex=1.2)
plotRLE(set1, outline=FALSE, ylim=c(-4, 4), col=colors[x])
?merge
library(dplyr)
library(stringr)
library(DESeq2)
library(ggplot2)
library(patchwork)
setwd("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/UmassData")
countsres<-read.table("fcounts_umass_results.txt", header = T)
SEgenesbed<-read.table("single-exon_no_annotated_no_novel.bed", header = F)
SEgenesOld<-read.table("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYM/ENSG_SingleExon.txt")
names(countsres)
countmatrix<-countsres[,c(1,16:19)]
SEgenesbed$Geneid<-str_split(SEgenesbed$V4, "\\_",simplify = T)[,1]
#countmatrix<-inner_join(countmatrix,SEgenesbed[7], by="Geneid")
rownames(countmatrix)<-countmatrix$Geneid
countmatrix$Geneid<-NULL
countmatrix<-countmatrix[rowSums(countmatrix[])>10,]
sampleinfo<-as.data.frame(names(countmatrix))
colnames(sampleinfo)<-"Library"
sampleinfo$sample<-as.factor(c("E117R","E117R","WT","WT"))
ddscounts.table <- DESeqDataSetFromMatrix(countmatrix, sampleinfo, formula(~ sample))
ddscounts <- DESeq(ddscounts.table)
#PCAplots
library(ggplot2)
library(ggrepel)
vsd <- vst(ddscounts, blind = T, nsub = 800)
vsd<-varianceStabilizingTransformation(ddscounts, blind = F)
plotPCA(vsd, intgroup = "sample")
View(countmatrix)
View(sampleinfo)
DEseqresults <- results(ddscounts, contrast = c("sample","E117R","WT"))
allres<-as.data.frame(DEseqresults)
allres$Geneid<-rownames(allres)
allres<-allres %>% mutate(Exons = case_when(
Geneid %in% SEgenesbed$Geneid ~ "Single Exon",
TRUE ~ "Multi Exon"))
table(allres$Exons)
allres<-na.omit(allres)
table(allres$Exons)
View(allres)
ggplot(allres,aes(log2FoldChange, colour = Exons)) +
stat_ecdf(geom = "step",size=1.0)+
theme_light()+
coord_cartesian(xlim = c(-4,4))+
labs(title = "CDF plot of EJC footprints MAGOH E117R vs MAGOH WT",
subtitle = "Umass Data",
x = "Log2 FC", y = "Cumulative frequency")+
annotate("text", x = -3.25, y = 0.96,
label = "p = 0.02423")+
annotate("text", x = -3.1, y = 0.9,
label = "27971",
colour = "salmon", parse = TRUE) +
annotate("text", x = -2.25, y = 0.9,
label = "440",
colour = "#00BFC4", parse = TRUE)+
annotate("text", x = -3.3, y = 0.9,
label = "n =            ,")
res <- wilcox.test(log2FoldChange ~ Exons, data = allres,
exact = FALSE, alternative = "less")
res
####Checking RP mRNAs
RPlist<-read.table("../RPLtranscript_info.txt")
library(tidyverse)
####Checking RP mRNAs
RPlist<-read_tsv("../RPLtranscript_info.txt")
View(RPlist)
RPlist<-unique(RPlist$ensembl_gene_id)
allres<-allres %>% mutate(RPgene = case_when(
Geneid %in% RPlist ~ "Yes",
TRUE ~ "No"))
table(allres$RPgene)
ggplot(allres,aes(log2FoldChange, colour = RPlist)) +
stat_ecdf(geom = "step",size=1.0)+
theme_light()+
coord_cartesian(xlim = c(-4,4))+
labs(title = "CDF plot of EJC footprints MAGOH E117R vs MAGOH WT",
subtitle = "Umass Data",
x = "Log2 FC", y = "Cumulative frequency")+
annotate("text", x = -3.25, y = 0.96,
label = "p = 0.02423")+
annotate("text", x = -3.1, y = 0.9,
label = "27971",
colour = "salmon", parse = TRUE) +
annotate("text", x = -2.25, y = 0.9,
label = "440",
colour = "#00BFC4", parse = TRUE)+
annotate("text", x = -3.3, y = 0.9,
label = "n =            ,")
View(allres)
ggplot(allres,aes(log2FoldChange, colour = RPgene)) +
stat_ecdf(geom = "step",size=1.0)+
theme_light()+
coord_cartesian(xlim = c(-4,4))+
labs(title = "CDF plot of EJC footprints MAGOH E117R vs MAGOH WT",
subtitle = "Umass Data",
x = "Log2 FC", y = "Cumulative frequency")+
annotate("text", x = -3.25, y = 0.96,
label = "p = 0.02423")+
annotate("text", x = -3.1, y = 0.9,
label = "27971",
colour = "salmon", parse = TRUE) +
annotate("text", x = -2.25, y = 0.9,
label = "440",
colour = "#00BFC4", parse = TRUE)+
annotate("text", x = -3.3, y = 0.9,
label = "n =            ,")
res <- wilcox.test(log2FoldChange ~ RPgene, data = allres,
exact = FALSE, alternative = "less")
res
ggplot(allres,aes(log2FoldChange, colour = RPgene)) +
stat_ecdf(geom = "step",size=1.0)+
theme_light()+
coord_cartesian(xlim = c(-4,4))+
labs(title = "CDF plot of EJC footprints MAGOH E117R vs MAGOH WT",
subtitle = "Umass Data",
x = "Log2 FC", y = "Cumulative frequency")+
annotate("text", x = -3.25, y = 0.96,
label = "p = 0.2761")+
annotate("text", x = -3.1, y = 0.9,
label = "28335",
colour = "salmon", parse = TRUE) +
annotate("text", x = -2.32, y = 0.9,
label = "76",
colour = "#00BFC4", parse = TRUE)+
annotate("text", x = -3.3, y = 0.9,
label = "n =            ,")
#####Checking membrane genes
MembraneList<-read_tsv("../GeneGroups.tsv")
View(MembraneList)
names(MembraneList)
names(allres)
MembraneList<-inner_join(MembraneList,allres)
names(MembraneList)[1]<-Geneid
names(MembraneList)[1]<-"Geneid"
MembraneList<-inner_join(MembraneList,allres)
ggplot(allres,aes(log2FoldChange, colour = ERstatus)) +
stat_ecdf(geom = "step",size=1.0)+
theme_light()+
coord_cartesian(xlim = c(-4,4))+
labs(title = "CDF plot of EJC footprints MAGOH E117R vs MAGOH WT",
subtitle = "Umass Data",
x = "Log2 FC", y = "Cumulative frequency")+
annotate("text", x = -3.25, y = 0.96,
label = "p = 0.2761")+
annotate("text", x = -3.1, y = 0.9,
label = "28335",
colour = "salmon", parse = TRUE) +
annotate("text", x = -2.32, y = 0.9,
label = "76",
colour = "#00BFC4", parse = TRUE)+
annotate("text", x = -3.3, y = 0.9,
label = "n =            ,")
ggplot(MembraneList,aes(log2FoldChange, colour = ERstatus)) +
stat_ecdf(geom = "step",size=1.0)+
theme_light()+
coord_cartesian(xlim = c(-4,4))+
labs(title = "CDF plot of EJC footprints MAGOH E117R vs MAGOH WT",
subtitle = "Umass Data",
x = "Log2 FC", y = "Cumulative frequency")+
annotate("text", x = -3.25, y = 0.96,
label = "p = 0.2761")+
annotate("text", x = -3.1, y = 0.9,
label = "28335",
colour = "salmon", parse = TRUE) +
annotate("text", x = -2.32, y = 0.9,
label = "76",
colour = "#00BFC4", parse = TRUE)+
annotate("text", x = -3.3, y = 0.9,
label = "n =            ,")
ggplot(MembraneList,aes(log2FoldChange, colour = ERstatus)) +
stat_ecdf(geom = "step",size=1.0)+
theme_light()+
coord_cartesian(xlim = c(-2,2))+
labs(title = "CDF plot of EJC footprints MAGOH E117R vs MAGOH WT",
subtitle = "Umass Data",
x = "Log2 FC", y = "Cumulative frequency")+
annotate("text", x = -3.25, y = 0.96,
label = "p = 0.2761")+
annotate("text", x = -3.1, y = 0.9,
label = "28335",
colour = "salmon", parse = TRUE) +
annotate("text", x = -2.32, y = 0.9,
label = "76",
colour = "#00BFC4", parse = TRUE)+
annotate("text", x = -3.3, y = 0.9,
label = "n =            ,")
#making a dataframe containing some metadata
setwd("~/Library/CloudStorage/OneDrive-TheOhioStateUniversity/Singhlab/Bioinfo/PYM/Kallisto")
sampleinfo<-as.data.frame(list.files())
colnames(sampleinfo)<-"Files"
sampleinfo$Sample<-c("Control","Control","Control","PYM KD","PYM KD","PYM KD",
"PYM OE","PYM OE","PYM OE","PYMDelΝ","PYMDelΝ","PYMDelN")
#importing kallisto output data into R
files <- file.path("~/OneDrive - The Ohio State University/Singhlab/Bioinfo/PYM/Kallisto", sampleinfo$Files, "abundance.h5")
names(files) <- sampleinfo$Files
#files1
library(tximport)
txi.kallisto.tsv <- tximport(files, type = "kallisto", txOut=TRUE, countsFromAbundance = "lengthScaledTPM",
ignoreTxVersion=TRUE, ignoreAfterBar = TRUE)
counts<-as.data.frame(txi.kallisto.tsv$counts)
counts<-counts%>%filter_all(all_vars(. > 0.5))
#sampleinfo as dataframe
sampleinfo$Sample<-as.factor(sampleinfo$Sample)
library(DESeq2)
ddscounts.table <- DESeqDataSetFromTximport(txi.kallisto.tsv, sampleinfo, formula(~ Sample))
ddscounts.table = ddscounts.table[rownames(ddscounts.table) %in% rownames(counts)]
ddscounts <- DESeq(ddscounts.table)
#PCAplots
library(ggplot2)
library(ggrepel)
vsd <- vst(ddscounts, blind = FALSE)
plotPCA(vsd, intgroup = "Sample")
R.Version()
data<-ONPG
install.packages("renz")
data(ONPG)
data<-clipboard()
data
data<-as.data.frame(clipboard())
View(data)
data<-read_tsz(clipboard())
data<-read_tsv(clipboard())
attributes(data)
data[ , 4:7] <- 1000 * data[ , 4:7]
dir.MM(data[ , c(1,8)], unit_v = "mM/min")
install.packages("ggpmisc")
